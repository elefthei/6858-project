Current PAL Implementation
======================

 + User logins (through SSH) go to an anonymous user with effectively
      no permissions.  This user may be in a chroot.

 + A setuid binary allows a user to spawn a shell with added
      permissions, after doing the necessary authentication.

 + A root daemon listens to authentication requests (effectively,
      logins), and reports whether or not authentication succeeded.
      This is what the aforementioned setuid binary uses.

 + Some administrator scripts exist to add groups/permissions.
      
Future Plans
------------

 + Have the root daemon allocate sockets on priviledged ports and then pass
   them to requesting processes, while checking their capabilities.

 + Have an application-level API, for doing similar splitting within
      an application.

 + Possibly add a kernel module to be able to change the permissions
      of a program after it is run.
